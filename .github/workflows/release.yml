name: Build and Release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

env:
  BASE_NAME: py_template  # Change this variable for different projects
  PY_VER: '3.11'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PY_VER }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --additional-hooks-dir=. ${{ env.BASE_NAME }}.py

    - name: Create zip file
      run: |
        cd dist
        zip -r ${{ env.BASE_NAME }}.zip *

    - name: Upload release asset
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BASE_NAME }}-linux
        path: dist/${{ env.BASE_NAME }}.zip

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PY_VER }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --additional-hooks-dir=. ${{ env.BASE_NAME }}.py

    - name: Create zip file
      run: |
        cd dist
        Compress-Archive -Path ${{ env.BASE_NAME }}.exe -DestinationPath ${{ env.BASE_NAME }}.zip

    - name: Upload release asset
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BASE_NAME }}-windows
        path: dist/${{ env.BASE_NAME }}.zip

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PY_VER }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --additional-hooks-dir=. ${{ env.BASE_NAME }}.py

    - name: Create zip file
      run: |
        cd dist
        zip -r ${{ env.BASE_NAME }}.zip *

    - name: Upload release asset
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BASE_NAME }}-macos
        path: dist/${{ env.BASE_NAME }}.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-windows, build-macos]
    steps:
    - name: Download Linux artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.BASE_NAME }}-linux
        path: linux

    - name: Download Windows artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.BASE_NAME }}-windows
        path: windows

    - name: Download macOS artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.BASE_NAME }}-macos
        path: macos

    - name: Get release ID
      id: get_release
      run: |
        response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}")
        release_id=$(echo $response | jq -r '.id')
        echo "RELEASE_ID=$release_id" >> $GITHUB_ENV

    - name: Upload Linux release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}/assets?name=${{ env.BASE_NAME }}-linux.zip
        asset_path: ./linux/${{ env.BASE_NAME }}.zip
        asset_name: ${{ env.BASE_NAME }}-linux.zip
        asset_content_type: application/zip

    - name: Upload Windows release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}/assets?name=${{ env.BASE_NAME }}-windows.zip
        asset_path: ./windows/${{ env.BASE_NAME }}.zip
        asset_name: ${{ env.BASE_NAME }}-windows.zip
        asset_content_type: application/zip

    - name: Upload macOS release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}/assets?name=${{ env.BASE_NAME }}-macos.zip
        asset_path: ./macos/${{ env.BASE_NAME }}.zip
        asset_name: ${{ env.BASE_NAME }}-macos.zip
        asset_content_type: application/zip

